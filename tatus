[1mdiff --git a/devplan.md b/devplan.md[m
[1mnew file mode 100644[m
[1mindex 0000000..b58a568[m
[1m--- /dev/null[m
[1m+++ b/devplan.md[m
[36m@@ -0,0 +1,421 @@[m
[32m+[m[32m## Development plan: Handwired Corne on ProMicro NRF52840 (nice!nano v2 compatible)[m
[32m+[m
[32m+[m[32mThis plan adapts the stock ZMK Corne config to your handwired build using a ProMicro‑style NRF52840 board that is a pin‑compatible clone of `nice_nano_v2`. It covers: custom matrix pins for each half, OLED over I2C on P0.17/P0.20, deep sleep with wake on any key, split roles (left=central/master, right=peripheral/slave), and dual USB/BLE operation.[m
[32m+[m
[32m+[m[32mReferences (read alongside each step):[m
[32m+[m[32m- New shield (hardware integration, pins, transforms): [zmk.dev › development › hardware-integration › new-shield](https://zmk.dev/docs/development/hardware-integration/new-shield)[m
[32m+[m[32m- Power management, sleep/wake: [zmk.dev › config › power](https://zmk.dev/docs/config/power)[m
[32m+[m[32m- Customization and keymaps: [zmk.dev › customization](https://zmk.dev/docs/customization)[m
[32m+[m[32m- Nice!Nano board (compatible pins): [zmk.dev boards list](https://zmk.dev/docs/hardware)[m
[32m+[m
[32m+[m[32mAssumptions[m
[32m+[m[32m- Your ProMicro NRF board uses the `nice_nano_v2` board definition (clone-compatible). Use Zephyr pins P0.xx / P1.xx as given below.[m
[32m+[m[32m- OLEDs are SSD1306 128x32 at I2C address 0x3C on both halves, wired to SDA=P0.17 and SCL=P0.20.[m
[32m+[m[32m- Typical Corne diode direction is COL2ROW. If your diodes are reversed, change to ROW2COL in the overlays (Step 4).[m
[32m+[m
[32m+[m[32mHardware pin map (provided)[m
[32m+[m[32m- Left half[m
[32m+[m[32m  - rows: r0=P1.00, r1=P0.11, r2=P1.04, r3=P1.06[m
[32m+[m[32m  - cols: c0=P0.09, c1=P0.10, c2=P1.11, c3=P1.13, c4=P1.15, c5=P0.02[m
[32m+[m[32m- Right half[m
[32m+[m[32m  - rows: r0=P0.29, r1=P1.13, r2=P0.10, r3=P0.09[m
[32m+[m[32m  - cols: c0=P1.06, c1=P1.04, c2=P0.11, c3=P1.00, c4=P0.24, c5=P0.22[m
[32m+[m[41m  [m
[32m+[m[32mNote: Row 3 has only thumb keys (3 keys). We will use a matrix-transform to map the sparse bottom row into the Corne layout expected by your `*.keymap`.[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m### Step 1 — Keep board and toolchain[m
[32m+[m[32m1) Continue targeting board `nice_nano_v2` in all builds. Your clone matches the pinout in the device tree, so no custom board is required.[m
[32m+[m[32m2) Keep `config/west.yml` as-is to consume upstream ZMK (already present here).[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m### Step 2 — Create custom split shields[m
[32m+[m[32mWhy: The stock `corne_left/right` shields assume different pins. We’ll define two new shields so we can keep upstream ZMK and your keymap layers intact.[m
[32m+[m
[32m+[m[32mCreate directories (names are suggestions you can adjust):[m
[32m+[m[32m- `zmk-config/boards/shields/corne_hw_left/`[m
[32m+[m[32m- `zmk-config/boards/shields/corne_hw_right/`[m
[32m+[m
[32m+[m[32mEach directory will contain at minimum:[m
[32m+[m[32m- `corne_hw_left.overlay` or `corne_hw_right.overlay` (device tree pins, I2C, matrix-transform, wakeup)[m
[32m+[m[32m- `corne_hw_left.keymap` or reuse the existing `config/corne.keymap` by not adding a keymap here[m
[32m+[m[32m- Optional `Kconfig.defconfig` if you want per-half defaults (e.g., split role)[m
[32m+[m
[32m+[m[32mDoc: New shield structure and where to place files is covered in the new-shield guide.[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m### Step 3 — I2C/OLED on both halves[m
[32m+[m[32mIn each overlay, enable the NRF TWI (I2C) and SSD1306. SDA=P0.17, SCL=P0.20.[m
[32m+[m
[32m+[m[32mExample snippet to place in both overlays:[m
[32m+[m[32m```dts[m
[32m+[m[32m&i2c1 {[m
[32m+[m[32m    status = "okay";[m
[32m+[m[32m    sda-pin = <17>; /* P0.17 */[m
[32m+[m[32m    scl-pin = <20>; /* P0.20 */[m
[32m+[m[32m    clock-frequency = <I2C_BITRATE_STANDARD>;[m
[32m+[m
[32m+[m[32m    oled0: oled@3c {[m
[32m+[m[32m        compatible = "solomon,ssd1306fb"; /* Zephyr SSD1306 */[m
[32m+[m[32m        reg = <0x3C>;[m
[32m+[m[32m        width = <128>;[m
[32m+[m[32m        height = <32>;[m
[32m+[m[32m        segment-offset = <0>;[m
[32m+[m[32m        page-offset = <0>;[m
[32m+[m[32m        label = "OLED";[m
[32m+[m[32m    };[m
[32m+[m[32m};[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mIn `config/corne.conf` enable the display (uncomment):[m
[32m+[m[32m```ini[m
[32m+[m[32mCONFIG_ZMK_DISPLAY=y[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mDoc: New shield (I2C/display section) and customization docs.[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m### Step 4 — Matrix pins and diode direction per half[m
[32m+[m[32mUse `zmk,kscan-gpio-matrix` with your exact rows/cols and add `wakeup-source;`. Start with `diode-direction = "col2row";`. If keys don’t scan, flip to `row2col`.[m
[32m+[m
[32m+[m[32mLeft overlay core (put inside `/ { ... }`):[m
[32m+[m[32m```dts[m
[32m+[m[32mkscan0: kscan {[m
[32m+[m[32m    compatible = "zmk,kscan-gpio-matrix";[m
[32m+[m[32m    label = "KSCAN_LEFT";[m
[32m+[m[32m    /* Rows: P1.00, P0.11, P1.04, P1.06 */[m
[32m+[m[32m    row-gpios = <&gpio1 0 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                <&gpio0 11 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                <&gpio1 4 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                <&gpio1 6 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;[m
[32m+[m[32m    /* Cols: P0.09, P0.10, P1.11, P1.13, P1.15, P0.02 */[m
[32m+[m[32m    col-gpios = <&gpio0 9 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                <&gpio0 10 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                <&gpio1 11 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                <&gpio1 13 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                <&gpio1 15 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                <&gpio0 2 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;[m
[32m+[m[32m    diode-direction = "col2row";[m
[32m+[m[32m    debounce-press-ms = <5>;[m
[32m+[m[32m    debounce-release-ms = <5>;[m
[32m+[m[32m    wakeup-source; /* Allow wake from deep sleep on any key */[m
[32m+[m[32m};[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mRight overlay core:[m
[32m+[m[32m```dts[m
[32m+[m[32mkscan0: kscan {[m
[32m+[m[32m    compatible = "zmk,kscan-gpio-matrix";[m
[32m+[m[32m    label = "KSCAN_RIGHT";[m
[32m+[m[32m    /* Rows: P0.29, P1.13, P0.10, P0.09 */[m
[32m+[m[32m    row-gpios = <&gpio0 29 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                <&gpio1 13 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                <&gpio0 10 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                <&gpio0 9 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;[m
[32m+[m[32m    /* Cols: P1.06, P1.04, P0.11, P1.00, P0.24, P0.22 */[m
[32m+[m[32m    col-gpios = <&gpio1 6 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                <&gpio1 4 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                <&gpio0 11 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                <&gpio1 0 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                <&gpio0 24 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                <&gpio0 22 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;[m
[32m+[m[32m    diode-direction = "col2row";[m
[32m+[m[32m    debounce-press-ms = <5>;[m
[32m+[m[32m    debounce-release-ms = <5>;[m
[32m+[m[32m    wakeup-source;[m
[32m+[m[32m};[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mDoc: Pin properties, kscan matrix, and diode direction are covered in the new‑shield guide.[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m### Step 5 — Matrix transform for Corne layout[m
[32m+[m[32mKeep a 4×6 matrix but map the sparse thumb row to the expected logical positions. Reuse the stock Corne transform as a starting point and adjust only if your thumb key wiring yields mismatches.[m
[32m+[m
[32m+[m[32mExample (place alongside `kscan0` in each overlay):[m
[32m+[m[32m```dts[m
[32m+[m[32mmatrix_transform {[m
[32m+[m[32m    compatible = "zmk,matrix-transform";[m
[32m+[m[32m    columns = <6>;[m
[32m+[m[32m    rows = <4>;[m
[32m+[m[32m    /* Map physical (row-major) to logical Corne order. Adjust if needed. */[m
[32m+[m[32m    map = <0 1 2 3 4 5[m
[32m+[m[32m           6 7 8 9 10 11[m
[32m+[m[32m           12 13 14 15 16 17[m
[32m+[m[32m           18 19 20 21 22 23>;[m
[32m+[m[32m};[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mIf some bottom-row positions are not populated, keep them mapped and leave the corresponding keymap bindings as `&none` or `&trans` depending on your preference.[m
[32m+[m
[32m+[m[32mDoc: Matrix transform section in the new‑shield guide.[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m### Step 6 — Split roles and transports[m
[32m+[m[32mLeft is the central (master), right is peripheral (slave).[m
[32m+[m
[32m+[m[32mPer‑half defconfig (optional) or `*.conf` per shield:[m
[32m+[m[32m```ini[m
[32m+[m[32m# Left (central)[m
[32m+[m[32mCONFIG_ZMK_SPLIT=y[m
[32m+[m[32mCONFIG_ZMK_SPLIT_BLE=y[m
[32m+[m[32mCONFIG_ZMK_SPLIT_ROLE_CENTRAL=y[m
[32m+[m[32mCONFIG_ZMK_USB=y[m
[32m+[m
[32m+[m[32m# Right (peripheral)[m
[32m+[m[32mCONFIG_ZMK_SPLIT=y[m
[32m+[m[32mCONFIG_ZMK_SPLIT_BLE=y[m
[32m+[m[32mCONFIG_ZMK_SPLIT_ROLE_PERIPHERAL=y[m
[32m+[m[32mCONFIG_ZMK_USB=y[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mNotes[m
[32m+[m[32m- With `CONFIG_ZMK_USB=y`, the left half will enumerate as a USB keyboard when plugged in; BLE stays available. This satisfies the “Bluetooth build but also work wired” requirement.[m
[32m+[m[32m- Keep the right half flashable over USB for updates, but you normally won’t plug it during use.[m
[32m+[m
[32m+[m[32mDoc: Split details in the hardware‑integration guide; USB/BLE behavior in customization; power doc for USB vs BLE priority.[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m### Step 7 — Deep sleep and wake on key[m
[32m+[m[32mEnable deep sleep and ensure the kscan is a wakeup source (already added in Step 4). Configure timeouts globally in `config/corne.conf` (or per shield conf):[m
[32m+[m[32m```ini[m
[32m+[m[32mCONFIG_ZMK_SLEEP=y[m
[32m+[m[32m# Example: 10 minutes idle → sleep; tweak to taste[m
[32m+[m[32mCONFIG_ZMK_IDLE_SLEEP_TIMEOUT=600000[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mIf you previously observed a board that would not wake except on power, it was likely missing the `wakeup-source` on the kscan (or wired to non‑wakeup capable pins). The pins you selected on nRF52840 support wake via GPIOTE sensing.[m
[32m+[m
[32m+[m[32mDoc: Power management and wake sources page.[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m### Step 8 — Build matrix[m
[32m+[m[32mAdd your shields to `build.yaml` so CI (or local West) produces both halves:[m
[32m+[m[32m```yaml[m
[32m+[m[32minclude:[m
[32m+[m[32m  - board: nice_nano_v2[m
[32m+[m[32m    shield: corne_hw_left[m
[32m+[m[32m  - board: nice_nano_v2[m
[32m+[m[32m    shield: corne_hw_right[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mLocal builds (examples):[m
[32m+[m[32m```bash[m
[32m+[m[32mwest build -p -b nice_nano_v2 -- -DSHIELD=corne_hw_left[m
[32m+[m[32mwest build -p -b nice_nano_v2 -- -DSHIELD=corne_hw_right[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mDoc: Customization → building and publishing.[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m### Step 9 — Flashing[m
[32m+[m[32m1) Put each half into UF2 bootloader (double‑tap RST pads). If your clone lacks a button, briefly short the RST pad twice.[m
[32m+[m[32m2) Copy the corresponding UF2 artifact to the mass‑storage device.[m
[32m+[m[32m3) First pair the left (central) over BLE; the right follows as a split peripheral.[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m### Step 10 — Validation checklist[m
[32m+[m[32mRun in this order to isolate failures:[m
[32m+[m[32m- Matrix scan: Open a key tester over USB (left); verify each position. If a whole row/col is dead, re‑check pin numbers and diode direction.[m
[32m+[m[32m- Sleep/wake: Let idle hit the timeout; press a key to wake. If it doesn’t wake, confirm `wakeup-source` exists on `kscan0` and pins support sensing.[m
[32m+[m[32m- OLED: Confirm boot logo/status. If blank, scan I2C (address 0x3C) and verify `&i2c1` pins 17/20 aren’t swapped.[m
[32m+[m[32m- Split over BLE: Power only the right; then power the left. Right should join after the left is up.[m
[32m+[m[32m- Wired fallback: Plug left via USB; ensure keystrokes reach the host immediately (USB has priority when present).[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m### Appendix — Full overlay skeletons[m
[32m+[m
[32m+[m[32mLeft (`boards/shields/corne_hw_left/corne_hw_left.overlay`):[m
[32m+[m[32m```dts[m
[32m+[m[32m/ {[m
[32m+[m[32m    chosen { zmk,kscan = &kscan0; };[m
[32m+[m
[32m+[m[32m    kscan0: kscan {[m
[32m+[m[32m        compatible = "zmk,kscan-gpio-matrix";[m
[32m+[m[32m        label = "KSCAN_LEFT";[m
[32m+[m[32m        row-gpios = <&gpio1 0 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                    <&gpio0 11 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                    <&gpio1 4 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                    <&gpio1 6 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;[m
[32m+[m[32m        col-gpios = <&gpio0 9 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                    <&gpio0 10 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                    <&gpio1 11 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                    <&gpio1 13 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                    <&gpio1 15 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                    <&gpio0 2 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;[m
[32m+[m[32m        diode-direction = "col2row";[m
[32m+[m[32m        debounce-press-ms = <5>;[m
[32m+[m[32m        debounce-release-ms = <5>;[m
[32m+[m[32m        wakeup-source;[m
[32m+[m[32m    };[m
[32m+[m
[32m+[m[32m    matrix_transform {[m
[32m+[m[32m        compatible = "zmk,matrix-transform";[m
[32m+[m[32m        columns = <6>;[m
[32m+[m[32m        rows = <4>;[m
[32m+[m[32m        map = <0 1 2 3 4 5  6 7 8 9 10 11  12 13 14 15 16 17  18 19 20 21 22 23>;[m
[32m+[m[32m    };[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m&i2c1 {[m
[32m+[m[32m    status = "okay";[m
[32m+[m[32m    sda-pin = <17>;[m
[32m+[m[32m    scl-pin = <20>;[m
[32m+[m[32m    clock-frequency = <I2C_BITRATE_STANDARD>;[m
[32m+[m
[32m+[m[32m    oled0: oled@3c {[m
[32m+[m[32m        compatible = "solomon,ssd1306fb";[m
[32m+[m[32m        reg = <0x3C>;[m
[32m+[m[32m        width = <128>;[m
[32m+[m[32m        height = <32>;[m
[32m+[m[32m        label = "OLED";[m
[32m+[m[32m    };[m
[32m+[m[32m};[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mRight (`boards/shields/corne_hw_right/corne_hw_right.overlay`):[m
[32m+[m[32m```dts[m
[32m+[m[32m/ {[m
[32m+[m[32m    chosen { zmk,kscan = &kscan0; };[m
[32m+[m
[32m+[m[32m    kscan0: kscan {[m
[32m+[m[32m        compatible = "zmk,kscan-gpio-matrix";[m
[32m+[m[32m        label = "KSCAN_RIGHT";[m
[32m+[m[32m        row-gpios = <&gpio0 29 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                    <&gpio1 13 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                    <&gpio0 10 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                    <&gpio0 9 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;[m
[32m+[m[32m        col-gpios = <&gpio1 6 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                    <&gpio1 4 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                    <&gpio0 11 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                    <&gpio1 0 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                    <&gpio0 24 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>,[m
[32m+[m[32m                    <&gpio0 22 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;[m
[32m+[m[32m        diode-direction = "col2row";[m
[32m+[m[32m        debounce-press-ms = <5>;[m
[32m+[m[32m        debounce-release-ms = <5>;[m
[32m+[m[32m        wakeup-source;[m
[32m+[m[32m    };[m
[32m+[m
[32m+[m[32m    matrix_transform {[m
[32m+[m[32m        compatible = "zmk,matrix-transform";[m
[32m+[m[32m        columns = <6>;[m
[32m+[m[32m        rows = <4>;[m
[32m+[m[32m        map = <0 1 2 3 4 5  6 7 8 9 10 11  12 13 14 15 16 17  18 19 20 21 22 23>;[m
[32m+[m[32m    };[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m&i2c1 {[m
[32m+[m[32m    status = "okay";[m
[32m+[m[32m    sda-pin = <17>;[m
[32m+[m[32m    scl-pin = <20>;[m
[32m+[m[32m    clock-frequency = <I2C_BITRATE_STANDARD>;[m
[32m+[m
[32m+[m[32m    oled0: oled@3c {[m
[32m+[m[32m        compatible = "solomon,ssd1306fb";[m
[32m+[m[32m        reg = <0x3C>;[m
[32m+[m[32m        width = <128>;[m
[32m+[m[32m        height = <32>;[m
[32m+[m[32m        label = "OLED";[m
[32m+[m[32m    };[m
[32m+[m[32m};[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mYou can keep a single shared `corne.keymap` (already in `config/`) so both halves use the same layers. If any positions differ, add per‑half keymaps in the shield directories.[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m### Step 11 — What to change in this repo (summary)[m
[32m+[m[32m- Add the two new shield directories and overlays (Step 2, 3, 4, 5).[m
[32m+[m[32m- Uncomment `CONFIG_ZMK_DISPLAY=y` and add sleep options in `config/corne.conf` (Step 3, 7).[m
[32m+[m[32m- Update `build.yaml` to build `corne_hw_left` and `corne_hw_right` (Step 8).[m
[32m+[m[32m- Keep using `nice_nano_v2` for both halves.[m
[32m+[m
[32m+[m[32mAfter these edits, build and flash both halves; test USB first (left), then BLE split, then sleep/wake and OLED.[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m### Addendum — Alternative kscan polarity/pulls (ACTIVE_HIGH + PULL_DOWN)[m
[32m+[m[32mFrom your 3×3 numpad tests, scanning only worked when rows were configured as `GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN` and columns as `GPIO_ACTIVE_HIGH`, with `diode-direction = "col2row";` and `wakeup-source;`. If your Corne behaves the same, prefer this variant over the default `ACTIVE_LOW | PULL_UP` style used earlier.[m
[32m+[m
[32m+[m[32mYour working minimal example:[m
[32m+[m[32m```dts[m
[32m+[m[32mkscan0: kscan0 {[m
[32m+[m[32m    compatible = "zmk,kscan-gpio-matrix";[m
[32m+[m[32m    diode-direction = "col2row";[m
[32m+[m[32m    wakeup-source;[m
[32m+[m
[32m+[m[32m    row-gpios = <&gpio0 29 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,[m
[32m+[m[32m                <&gpio0 2  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,[m
[32m+[m[32m                <&gpio1 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;[m
[32m+[m
[32m+[m[32m    col-gpios = <&gpio0 9  GPIO_ACTIVE_HIGH>,[m
[32m+[m[32m                <&gpio1 11 GPIO_ACTIVE_HIGH>,[m
[32m+[m[32m                <&gpio0 31 GPIO_ACTIVE_HIGH>;[m
[32m+[m[32m};[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mApply the same polarity/pulls to the full 4×6 matrices:[m
[32m+[m
[32m+[m[32mLeft (ACTIVE_HIGH rows with PULL_DOWN):[m
[32m+[m[32m```dts[m
[32m+[m[32mkscan0: kscan {[m
[32m+[m[32m    compatible = "zmk,kscan-gpio-matrix";[m
[32m+[m[32m    label = "KSCAN_LEFT";[m
[32m+[m[32m    row-gpios = <&gpio1 0  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,  /* P1.00 */[m
[32m+[m[32m                <&gpio0 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,  /* P0.11 */[m
[32m+[m[32m                <&gpio1 4  (GPIO