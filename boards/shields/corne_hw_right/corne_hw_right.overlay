#include <zephyr/dt-bindings/pinctrl/nrf-pinctrl.h>

/ {
    chosen { zmk,kscan = &kscan0; };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN_RIGHT";
        /* Right half rows: P0.29, P1.13, P0.10, P0.09 */
        row-gpios = <&gpio0 29 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,  /* P0.29 */
                    <&gpio1 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,  /* P1.13 */
                    <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,  /* P0.10 */
                    <&gpio0 9  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;  /* P0.09 */
        /* Right half cols: P1.06, P1.04, P0.11, P1.00, P0.24, P0.22 */
        col-gpios = <&gpio1 6  GPIO_ACTIVE_HIGH>,  /* P1.06 */
                    <&gpio1 4  GPIO_ACTIVE_HIGH>,  /* P1.04 */
                    <&gpio0 11 GPIO_ACTIVE_HIGH>,  /* P0.11 */
                    <&gpio1 0  GPIO_ACTIVE_HIGH>,  /* P1.00 */
                    <&gpio0 24 GPIO_ACTIVE_HIGH>,  /* P0.24 */
                    <&gpio0 22 GPIO_ACTIVE_HIGH>;  /* P0.22 */
        diode-direction = "col2row";
        debounce-press-ms = <5>;
        debounce-release-ms = <5>;
        wakeup-source;
    };

    matrix_transform {
        compatible = "zmk,matrix-transform";
        columns = <6>;
        rows = <4>;
        /* Map physical (row-major) to logical Corne order */
        map = <0 1 2 3 4 5  6 7 8 9 10 11  12 13 14 15 16 17  18 19 20 21 22 23>;
    };
};

&i2c1 {
    status = "okay";
    pinctrl-0 = <&i2c1_default>;
    pinctrl-1 = <&i2c1_sleep>;
    pinctrl-names = "default", "sleep";
    clock-frequency = <I2C_BITRATE_STANDARD>;

    oled0: oled@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3C>;
        width = <128>;
        height = <32>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <31>;
<<<<<<< HEAD
        prechargep = <0xF1>;
=======
>>>>>>> ec32d3fa2a6a63067f180e81acf3b0ab56a5fd84
        label = "OLED";
    };
};

&pinctrl {
    i2c1_default: i2c1_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SCL, 0, 20)>,
                    <NRF_PSEL(TWIM_SDA, 0, 17)>;
            nordic,drive-mode = <NRF_DRIVE_S0D1>;
        };
    };

    i2c1_sleep: i2c1_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SCL, 0, 20)>,
                    <NRF_PSEL(TWIM_SDA, 0, 17)>;
            low-power-enable;
        };
    };
};